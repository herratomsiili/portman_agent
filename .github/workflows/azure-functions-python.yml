name: Deploy Python App to Azure Function App

on:
  #push:
  #  branches: ["main"]  # Triggers deployment when pushing to main branch
  workflow_dispatch:  # Allows manual execution from GitHub Actions UI
    inputs:
      environment:
        description: "Select deployment environment"
        required: true
        default: "development"
        type: choice
        options:
          - development
          - testing
          - production
          - tamk

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: "."
  PYTHON_VERSION: "3.12"
  DB_NAME: "portman"
  DB_USER: "adminuser"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment || 'development' }}

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}  # Change if using a different Python version

      - name: Resolve Project Dependencies Using Pip
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt --target=".python_packages/lib/site-packages"

      # Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Set Environment Variables in Azure Function App
      - name: Set Environment Variables
        run: |
          az functionapp config appsettings set --name ${{ vars.AZURE_FUNCTIONAPP_NAME }} \
          --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
          --settings \
            DB_HOST=${{ secrets.DB_HOST }} \
            DB_NAME=${{ env.DB_NAME }} \
            DB_USER=${{ env.DB_USER }} \
            DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            XML_CONVERTER_FUNCTION_URL=https://${{ vars.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net/api/emswe-xml-converter?code=${{ secrets.XML_CONVERTER_FUNCTION_KEY }} \
            SLACK_WEBHOOK_ENABLED=${{ vars.SLACK_WEBHOOK_ENABLED }} \
            SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }} \
            SLACK_CHANNEL=${{ vars.SLACK_CHANNEL }} \
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            OPENAI_ENDPOINT=https://${{ vars.NAMING_PREFIX }}-openai.openai.azure.com/ \
            OPENAI_DEPLOYMENT_NAME="cargo-generator" \
            OPENAI_API_VERSION="2025-02-01-preview" \
            FUNCTION_APP_URL=https://${{ vars.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net \
            VESSEL_DETAILS_FUNCTION_KEY=${{ secrets.VESSEL_DETAILS_FUNCTION_KEY }}

      # Deploy to Azure
      - name: Run Azure Functions Action
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ vars.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          scm-do-build-during-deployment: true
          enable-oryx-build: true
